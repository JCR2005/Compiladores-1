
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'COMA CORCHETEDER CORCHETEIZQ DECIMAL ENTERO ID IGUAL PARENDER PARENIZQ PUNTOYCOMA TIPO VECTOR\n    declaracion : VECTOR CORCHETEIZQ TIPO CORCHETEDER ID PARENIZQ dimensiones PARENDER PUNTOYCOMA\n                 | VECTOR CORCHETEIZQ TIPO CORCHETEDER ID PARENIZQ dimensiones PARENDER IGUAL asignacion PUNTOYCOMA\n    dimensiones : ENTERO\n                   | dimensiones COMA ENTEROelemento : expresion\n                | lista_vectoreslista_expresiones : elemento\n                         | lista_expresiones COMA elemento\n                         | lista_vectores : CORCHETEIZQ lista_expresiones CORCHETEDERexpresion : ENTERO\n                 | DECIMALasignacion : lista_vectores\n    indices_vector : CORCHETEIZQ expresion CORCHETEDER\n                   | indices_vector CORCHETEIZQ expresion CORCHETEDER\n    \n    expresion : ID indices_vector\n    '
    
_lr_action_items = {'VECTOR':([0,],[2,]),'$end':([1,12,25,],[0,-1,-2,]),'CORCHETEIZQ':([2,13,15,24,27,28,34,35,],[3,15,15,29,15,31,-14,-15,]),'TIPO':([3,],[4,]),'CORCHETEDER':([4,15,18,19,20,21,22,23,26,28,30,32,33,34,35,],[5,-9,26,-7,-5,-6,-11,-12,-10,-16,-8,34,35,-14,-15,]),'ID':([5,15,27,29,31,],[6,24,24,24,24,]),'PARENIZQ':([6,],[7,]),'ENTERO':([7,11,15,27,29,31,],[9,14,22,22,22,22,]),'PARENDER':([8,9,14,],[10,-3,-4,]),'COMA':([8,9,14,15,18,19,20,21,22,23,26,28,30,34,35,],[11,-3,-4,-9,27,-7,-5,-6,-11,-12,-10,-16,-8,-14,-15,]),'PUNTOYCOMA':([10,16,17,26,],[12,25,-13,-10,]),'IGUAL':([10,],[13,]),'DECIMAL':([15,27,29,31,],[23,23,23,23,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'declaracion':([0,],[1,]),'dimensiones':([7,],[8,]),'asignacion':([13,],[16,]),'lista_vectores':([13,15,27,],[17,21,21,]),'lista_expresiones':([15,],[18,]),'elemento':([15,27,],[19,30,]),'expresion':([15,27,29,31,],[20,20,32,33,]),'indices_vector':([24,],[28,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> declaracion","S'",1,None,None,None),
  ('declaracion -> VECTOR CORCHETEIZQ TIPO CORCHETEDER ID PARENIZQ dimensiones PARENDER PUNTOYCOMA','declaracion',9,'p_declaracion_vector','parser.py',37),
  ('declaracion -> VECTOR CORCHETEIZQ TIPO CORCHETEDER ID PARENIZQ dimensiones PARENDER IGUAL asignacion PUNTOYCOMA','declaracion',11,'p_declaracion_vector','parser.py',38),
  ('dimensiones -> ENTERO','dimensiones',1,'p_dimensiones','parser.py',57),
  ('dimensiones -> dimensiones COMA ENTERO','dimensiones',3,'p_dimensiones','parser.py',58),
  ('elemento -> expresion','elemento',1,'p_elemento','parser.py',66),
  ('elemento -> lista_vectores','elemento',1,'p_elemento','parser.py',67),
  ('lista_expresiones -> elemento','lista_expresiones',1,'p_lista_expresiones','parser.py',72),
  ('lista_expresiones -> lista_expresiones COMA elemento','lista_expresiones',3,'p_lista_expresiones','parser.py',73),
  ('lista_expresiones -> <empty>','lista_expresiones',0,'p_lista_expresiones','parser.py',74),
  ('lista_vectores -> CORCHETEIZQ lista_expresiones CORCHETEDER','lista_vectores',3,'p_lista_vectores','parser.py',82),
  ('expresion -> ENTERO','expresion',1,'p_expresion','parser.py',87),
  ('expresion -> DECIMAL','expresion',1,'p_expresion','parser.py',88),
  ('asignacion -> lista_vectores','asignacion',1,'p_asignacion','parser.py',93),
  ('indices_vector -> CORCHETEIZQ expresion CORCHETEDER','indices_vector',3,'p_indices_vector','parser.py',102),
  ('indices_vector -> indices_vector CORCHETEIZQ expresion CORCHETEDER','indices_vector',4,'p_indices_vector','parser.py',103),
  ('expresion -> ID indices_vector','expresion',2,'p_acceso_vector','parser.py',113),
]
